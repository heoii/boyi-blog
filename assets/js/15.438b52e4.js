(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{409:function(t,e,s){"use strict";s.r(e);var a=s(0),v=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"作用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#作用"}},[t._v("#")]),t._v(" 作用")]),t._v(" "),e("blockquote",[e("p",[e("code",[t._v("git reset")]),t._v(" 命令用于回退版本，可以指定退回某一次提交的版本。")])]),t._v(" "),e("h2",{attrs:{id:"使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[t._v("#")]),t._v(" 使用")]),t._v(" "),e("h3",{attrs:{id:"head-说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#head-说明"}},[t._v("#")]),t._v(" HEAD 说明")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("HEAD 表示当前版本")])]),t._v(" "),e("li",[e("p",[t._v("HEAD^ 上一个版本")])]),t._v(" "),e("li",[e("p",[t._v("HEAD^^ 上上一个版本")])]),t._v(" "),e("li",[e("p",[t._v("HEAD^^^ 上上上一个版本")])]),t._v(" "),e("li",[e("p",[t._v("以此类推...")])])]),t._v(" "),e("h3",{attrs:{id:"可以使用-数字表示"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#可以使用-数字表示"}},[t._v("#")]),t._v(" 可以使用 ～数字表示")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("HEAD~0 表示当前版本")])]),t._v(" "),e("li",[e("p",[t._v("HEAD~1 上一个版本")])]),t._v(" "),e("li",[e("p",[t._v("HEAD~2 上上一个版本")])]),t._v(" "),e("li",[e("p",[t._v("HEAD~3 上上上一个版本")])]),t._v(" "),e("li",[e("p",[t._v("以此类推...")])])]),t._v(" "),e("h3",{attrs:{id:"git-reset-命令语法格式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-reset-命令语法格式"}},[t._v("#")]),t._v(" git reset 命令语法格式")]),t._v(" "),e("blockquote",[e("p",[t._v("git reset [--soft | --mixed | --hard] [HEAD]")])]),t._v(" "),e("h4",{attrs:{id:"git-reset-soft"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-reset-soft"}},[t._v("#")]),t._v(" git reset --soft")]),t._v(" "),e("blockquote",[e("p",[t._v("将 HEAD 引用指向给定提交。"),e("code",[t._v("索引（暂存区）")]),t._v("和"),e("code",[t._v("工作目录")]),t._v("的内容是"),e("code",[t._v("不变")]),t._v("的，在三个命令中对现有版本库状态改动最小。(改变"),e("code",[t._v("本地仓库")]),t._v("中的版本,被回退的那些版本的修改会被放在"),e("code",[t._v("暂存区")]),t._v("，可以再次提交)")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --soft HEAD\n")])])]),e("h4",{attrs:{id:"git-reset-mixed-默认模式-可以直接写-git-reset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-reset-mixed-默认模式-可以直接写-git-reset"}},[t._v("#")]),t._v(" git reset --mixed(默认模式 可以直接写 git reset)")]),t._v(" "),e("blockquote",[e("p",[t._v("HEAD 引用指向给定提交，并且"),e("code",[t._v("索引（暂存区）")]),t._v("内容也跟着"),e("code",[t._v("改变")]),t._v("，"),e("code",[t._v("工作目录")]),t._v("内容"),e("code",[t._v("不变")]),t._v("。这个命令会将索引（暂存区）变成你刚刚暂存该提交全部变化时的状态，会显示工作目录中有什么修改。(就是用"),e("code",[t._v("本地仓库")]),t._v("的版本覆盖了"),e("code",[t._v("暂存区")]),t._v("的,回退的那些版本的修改会放在"),e("code",[t._v("工作目录")]),t._v("，可以先加到"),e("code",[t._v("暂存区")]),t._v("，然后再提交)")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset HEAD^                  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 回退所有内容到上一个版本")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset HEAD^ helloworld.html  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 回退 hello.php 文件的版本到上一个版本")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset  052e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("commit "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 回退到指定版本")]),t._v("\n")])])]),e("h4",{attrs:{id:"git-reset-hard-慎用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-reset-hard-慎用"}},[t._v("#")]),t._v(" git reset --hard (慎用)")]),t._v(" "),e("blockquote",[e("p",[t._v("HEAD 引用指向给定提交，"),e("code",[t._v("索引（暂存区）")]),t._v("内容和"),e("code",[t._v("工作目录")]),t._v("内容都会"),e("code",[t._v("改变")]),t._v("给定提交时的状态。也就是在给定提交后所修改的内容都会丢失(新文件会被删除，不在工作目录中的文件恢复，未清除回收站的前提)。(就是用"),e("code",[t._v("本地仓库")]),t._v("的版本覆盖"),e("code",[t._v("暂存区")]),t._v("与"),e("code",[t._v("工作目录")]),t._v(",被回退的那些版本的修改会直接舍弃，好像它们没有来过一样)")])]),t._v(" "),e("h4",{attrs:{id:"git-reflog-对于-hard-模式下的回退"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-reflog-对于-hard-模式下的回退"}},[t._v("#")]),t._v(" git reflog(对于-- hard 模式下的回退)")]),t._v(" "),e("blockquote",[e("p",[t._v("当一不小心执行了 hard 模式，想要进行版本回退")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reflog    //获得commit_id\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard commit_id //就能回到对应的版本\n")])])]),e("h2",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),e("table",[e("thead",[e("tr",[e("td"),t._v(" "),e("td",{attrs:{colspan:"3"}},[t._v(" git reset产生的影响")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("选项")]),t._v(" "),e("td",[t._v("本地仓库（HEAD）")]),t._v(" "),e("td",[t._v("暂存区")]),t._v(" "),e("td",[t._v("工作目录")])]),t._v(" "),e("tr",[e("td",[t._v("--soft")]),t._v(" "),e("td",[t._v("有")]),t._v(" "),e("td",[t._v("无")]),t._v(" "),e("td",[t._v("无")])]),t._v(" "),e("tr",[e("td",[t._v("--mixed（默认）")]),t._v(" "),e("td",[t._v("有")]),t._v(" "),e("td",[t._v("有")]),t._v(" "),e("td",[t._v("无")])]),t._v(" "),e("tr",[e("td",[t._v("--hard")]),t._v(" "),e("td",[t._v("有")]),t._v(" "),e("td",[t._v("有")]),t._v(" "),e("td",[t._v("有")])])])])])}),[],!1,null,null,null);e.default=v.exports}}]);